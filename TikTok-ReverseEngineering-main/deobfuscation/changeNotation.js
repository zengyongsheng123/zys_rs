const fs = require('fs');
const input = 'ems.js'
const output = 'ems1.js'
const payload = fs.readFileSync(input, 'utf-8')
var Gb = [
    "isTrusted",
    "beforeunload",
    "filename too long",
    "isView",
    "valueOf",
    "JS_MD5_NO_NODE_JS",
    "setLocalDescription",
    "__1479382789__",
    "https://sf16-website-login.neutral.ttwstatic.com/obj/tiktok_web_login_static/slardar/fe/sdk-web/plugins",
    "createOffer",
    "charCodeAt",
    "setTTWebid",
    "[object Function]",
    "versions",
    "fontFamily",
    ";",
    "buffer8",
    "RTCPeerConnection",
    "MYRIAD PRO",
    "readystatechange",
    "item",
    "exports",
    "f",
    "",
    "indexOf",
    "removeEventListener",
    "vivobrowser",
    "encode",
    "close",
    "h1",
    "Jokerman",
    "Palatino",
    "first",
    "s",
    "setUserMode",
    "Segoe UI",
    "dictionary",
    "create",
    "Trebuchet MS",
    "stream finishing",
    "setTTWid",
    " is not a function",
    "m",
    "Colonna MT",
    "innerHTML",
    "sessionStorage",
    "charAt",
    "report",
    "cookie",
    "=; expires=Mon, 20 Sep 2010 00:00:00 UTC; path=/;",
    "createDataChannel",
    "update",
    "node",
    "Object.keys called on non-object",
    "test",
    "withCredentials",
    "mmmmmmmmmmlli",
    "timeout",
    "invalid block type",
    "shift",
    "open",
    "[object Undefined]",
    "next",
    "require('crypto')",
    "ConfigException",
    "catch",
    "invalid distance",
    "utf8",
    "candidate",
    "slardarErrs",
    "passive",
    "reportUrls",
    "==",
    "invalid length/literal",
    "i",
    "apply",
    "version",
    "prototype",
    "|",
    "72px",
    "subarray",
    "boe",
    "MT Extra",
    "getItem",
    "?",
    ".",
    "sans-serif",
    "mon-ttp.lemon8-app.us",
    "iterator",
    "Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.",
    "12",
    "join",
    "fromCharCode",
    "Wingdings",
    "; path=/;",
    "Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.",
    "string",
    "createElement",
    "type",
    "CordiaUPC",
    "d",
    "data",
    "keys",
    "suffixes",
    "Aparajita",
    "mon16-normal-useast5.tiktokv.us",
    "now",
    "mon.tiktokv.com",
    " ",
    "hBytes",
    "code",
    "[object String]",
    "Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.",
    "Castellar",
    "substr",
    "Playbill",
    "decode",
    "random",
    "no stream handler",
    "getTime",
    "arrayBuffer",
    "h2",
    "/mssdk/web_common",
    "SimSun-ExtB",
    "mon-va.lemon8-app.com",
    "##",
    "_xex",
    "length",
    "0",
    "Parchment",
    "mon-va.capcutapi.com",
    "[object Boolean]",
    "Sylfaen",
    "{}",
    "splice",
    "done",
    "symbol",
    "split",
    "__esModule",
    "includes",
    "r",
    "lastByteIndex",
    "resultCode",
    "finalize",
    "info",
    "sort",
    "Tw Cen MT",
    "plugins",
    "from",
    "&",
    "mon-va.byteoversea.com",
    "filename",
    " is not defined",
    "defineProperty",
    "isArray",
    "e",
    "pow",
    "[object HTMLAllCollection]",
    "appendChild",
    "clear",
    "/web/common",
    "setRequestHeader",
    "Map",
    "monospace",
    "removeChild",
    "md5",
    "set",
    "substring",
    "AVENIR",
    "call",
    "captureStackTrace",
    "onicecandidate",
    "fontSize",
    "hasOwnProperty",
    "hex",
    "=",
    "onicegatheringstatechange",
    "blocks",
    "JS_MD5_NO_WINDOW",
    "match",
    "mozRTCPeerConnection",
    "xmst",
    "offsetWidth",
    "getReferer",
    "propertyIsEnumerable",
    "slice",
    "JS_MD5_NO_ARRAY_BUFFER",
    "@@iterator",
    "setItem",
    "get",
    "stream finished",
    "complete",
    "Gulim",
    "array",
    "dispatchEvent",
    "abort",
    "offsetHeight",
    "reduce",
    "[object Object]",
    "function",
    "localStorage",
    "unexpected EOF",
    "status",
    "M5",
    "out",
    "invalid zip data",
    "ye",
    "prod",
    "onreadystatechange",
    "hashed",
    "Illegal statement",
    "init",
    "object",
    "hash",
    "webkitRTCPeerConnection",
    "/web/report",
    "n",
    "require('buffer').Buffer",
    "IrisUPC",
    "interactive",
    "Futura",
    "date not in range 1980-2099",
    "bytes",
    "h0",
    "digest",
    "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",
    "map",
    "l",
    "Malformed string",
    "2^",
    "Object",
    "globalThis",
    "trim",
    "perf",
    "forEach",
    "DOMContentLoaded",
    "Arguments",
    "floor",
    "err",
    "value",
    "body",
    "MS Outlook",
    "min",
    "start",
    "number",
    "__ac_testid",
    "exec",
    "invalid UTF-8 data",
    "pop",
    "setTTWebidV2",
    "isPrototypeOf",
    "https://lf16-cdn-tos.tiktokcdn-us.com/obj/static-tx/slardar/fe/sdk-web/plugins/",
    "setOptions",
    "p",
    "JS_MD5_NO_COMMON_JS",
    "Set",
    "serif",
    "; expires=",
    "Ut",
    "Tunga",
    "send",
    "base64",
    "host",
    "kWebsocket",
    "constructor",
    "OPTIMA",
    "frontierSign",
    "kHttp",
    "message",
    "return",
    "concat",
    "extra field too long",
    "no callback",
    "toLocaleString",
    "/",
    "toGMTString",
    "subscribe",
    "b",
    "lastChanceUrl",
    "DONE",
    "PLUGIN",
    "undefined",
    "toString",
    "max",
    ",",
    "key",
    "readyState",
    "input is invalid type",
    "[object Number]",
    "Vrinda",
    "push",
    "isWebmssdk",
    "h3",
    "POST",
    "isSignalComplete",
    "buffer",
    "name",
    "default",
    "iceGatheringState",
    "Arial Hebrew",
    "Leelawadee",
    "addEventListener",
    "span",
    "0123456789abcdef",
    "Constantia",
    "Meiryo",
    "error",
    "JS_MD5_NO_ARRAY_BUFFER_IS_VIEW",
    "Savoye LET",
    "finalized",
    "[object Array]"
]

// This is to change bracket notation
// to dot notation for better readability
// eg. window["a"] -> window.a
function replace(payload) {
    payload = payload.replace(/Gb\[(\d+)\]/g, (match, p1) => {
        const value = Gb[parseInt(p1)];
        return '"' + value + '"'; 
    });

    let lines = payload.split('\n');
    let processedLines = [];

    for (let line of lines) {
        console.log(line)
        while (line.match(/(\)|]|})(\[("|'|`)(\w+)("|'|`)\])/)) {
            console.log(1)
            line = line.replace(/(\)|]|})(\[("|'|`)(\w+)("|'|`)\])/, (match, before, _, __, key) => `${before}.${key}`);
        }

        while (line.match(/(\w+)\[("|'|`)(\w+)("|'|`)\]/)) {
            console.log(2)
            line = line.replace(/(\w+)\[("|'|`)(\w+)("|'|`)\]/, "$1.$3");
        }

        while (line.match(/(\)|\]|`)(\w+)\[("|'|`)(\w+)("|'|`)\]/)) {
            console.log(3)
            line = line.replace(/(\)|\]|`)(\w+)\[("|'|`)(\w+)("|'|`)\]/, "$2.$4");
        }

        while (line.match(/(\[("|'|`)(\w+)("|'|`)\])/)) {
            console.log(4)
            line = line.replace(/(\[("|'|`)(\w+)("|'|`)\])/, "$3");
        }

        processedLines.push(line);
    }

    return processedLines.join('\n');
}

const result = replace(payload)
fs.writeFile(output, result, () => console.log('done'));