_ᖁᕴᕿᖄ[_ᕴᖉᕾᕾ(78)] = function _ᖚᕿᕹᖙ(_ᖁᕴᕿᖄ, _ᕴᖂᖚᕿ) {
                var _ᕸᖗᖁᖆ = _ᖗᖉᖙᕹ.$_Cv
                  , _ᕴᖙᖀᖆ = ["$_DCAAz"].concat(_ᕸᖗᖁᖆ)
                  , _ᕴᖉᕾᕾ = _ᕴᖙᖀᖆ[1];
                _ᕴᖙᖀᖆ.shift();
                var _ᖆᖗᕸᕴ = _ᕴᖙᖀᖆ[0];
                var _ᖆᕹᖈᕾ = _ᕴᖂᖚᕿ[_ᕴᖉᕾᕾ(411)];
                if (!_ᖆᕹᖈᕾ[_ᕸᖗᖁᖆ(698)] || _ᕸᖗᖁᖆ(185) === _ᖆᕹᖈᕾ[_ᕸᖗᖁᖆ(698)])
                    return _ᖙᕺᖀᕷ[_ᕴᖉᕾᕾ(78)][_ᕴᖉᕾᕾ(976)](_ᖁᕴᕿᖄ);
                var _ᕺᖘᖈᕾ = (0,
                _ᖆᕷᖘᕿ[_ᕴᖉᕾᕾ(15)])()
                  , _ᖙᕶᖆᖄ = new (_ᖆᕷᖘᕿ[_ᕴᖉᕾᕾ(77)])([_ᕸᖗᖁᖆ(828), _ᕸᖗᖁᖆ(850)])
                  , _ᕴᖉᕷᖆ = {
                    1: {
                        symmetrical: _ᕹᕴᕷᖄ[_ᕸᖗᖁᖆ(78)],
                        asymmetric: new (_ᖗᖈᖚᖂ[_ᕸᖗᖁᖆ(78)])
                    },
                    2: {
                        symmetrical: new (_ᕿᖃᖚᖆ[_ᕴᖉᕾᕾ(78)])({
                            key: _ᕺᖘᖈᕾ,
                            mode: _ᕴᖉᕾᕾ(925),
                            iv: _ᕴᖉᕾᕾ(940)
                        }),
                        asymmetric: _ᖘᕹᖆᖗ[_ᕴᖉᕾᕾ(78)]
                    }
                };
                if (_ᖙᕶᖆᖄ[_ᕴᖉᕾᕾ(159)](_ᖆᕹᖈᕾ[_ᕴᖉᕾᕾ(698)])) {
                    var o = _ᕸᖗᖁᖆ(828) === _ᖆᕹᖈᕾ[_ᕴᖉᕾᕾ(698)]
                      , a = _ᖆᕹᖈᕾ[_ᕸᖗᖁᖆ(698)]
                      , _ = _ᕴᖉᕷᖆ[a][_ᕴᖉᕾᕾ(952)][_ᕸᖗᖁᖆ(971)](_ᕺᖘᖈᕾ);
                    while (o && (!_ || 256 !== _[_ᕸᖗᖁᖆ(39)]))
                        _ᕺᖘᖈᕾ = (0,
                        _ᖆᕷᖘᕿ[_ᕸᖗᖁᖆ(15)])(),
                        _ = (new (_ᖗᖈᖚᖂ[_ᕴᖉᕾᕾ(78)]))[_ᕸᖗᖁᖆ(971)](_ᕺᖘᖈᕾ);
                    var u = _ᕴᖉᕷᖆ[a][_ᕴᖉᕾᕾ(905)][_ᕴᖉᕾᕾ(971)](_ᖁᕴᕿᖄ, _ᕺᖘᖈᕾ);
                    return (0,
                    _ᖆᕷᖘᕿ[_ᕸᖗᖁᖆ(27)])(u) + _
                }
            }
var _ᖚᕿᕹᖙ = _ᕴᖉᖁᖗ[_ᕴᖉᕾᕾ(78)](_ᕸᖗᕾᖂ[_ᕴᖉᕾᕾ(78)]["stringify"](_ᖁᕴᕿᖄ), _ᖙᕺᖀᕷ)
    , u = {
    callback: _ᕴᖉᕾᕾ(8),
    captcha_id: _ᕴᖙᖀᖆ["captchaId"],
    challenge: _ᕴᖙᖀᖆ["challenge"],
    client_type: _ᕴᖙᖀᖆ["clientType"],
    lot_number: _ᕴᖙᖀᖆ["lotNumber"],
    risk_type: _ᕴᖙᖀᖆ["riskType"],
    payload: _ᕴᖙᖀᖆ["payload"],
    process_token: _ᕴᖙᖀᖆ["processToken"],
    payload_protocol: _ᕴᖙᖀᖆ["payloadProtocol"],
    pt: _ᕴᖙᖀᖆ["pt"],
    w: _ᖚᕿᕹᖙ
};